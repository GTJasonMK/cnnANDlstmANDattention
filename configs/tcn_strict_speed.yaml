# 严格评估友好的 TCN 训练模板（速度优先）
# 说明：该配置显式声明了训练时会用到的所有结构参数，保证评估端可严格重建；
# - TCN：使用因果卷积 + 残差，显式 dilation（不为 null）
# - 字段命名与类型与严格评估脚本完全一致（add_positional_encoding 等）

device: cuda
output_dir: outputs/exp_tcn_speed
visual_save_dir: image
visual_enabled: true

model:
  fc_hidden: 128
  forecast_horizon: 3
  cnn:
    variant: tcn   # 显式声明使用 TCN 骨干
  tcn:
    enabled: true
    use_batchnorm: true
    dropout: 0.05
    layers:
      - {out_channels: 32, kernel_size: 3, dilation: 1, activation: relu,  use_weightnorm: true}
      - {out_channels: 64, kernel_size: 3, dilation: 2, activation: relu,  use_weightnorm: true}
      - {out_channels: 64, kernel_size: 3, dilation: 4, activation: gelu,  use_weightnorm: true}
  lstm:
    rnn_type: lstm
    hidden_size: 128
    num_layers: 2
    bidirectional: true
    dropout: 0.1
  attention:
    enabled: true
    variant: standard
    num_heads: 4
    dropout: 0.1
    add_positional_encoding: false

data:
  data_path: data/your_dataset.csv   # TODO: 替换为你的实际数据路径（CSV/NPZ/NPY）
  sequence_length: 64
  horizon: 3
  feature_indices: null
  target_indices: null
  train_split: 0.7
  val_split: 0.15
  normalize: standard
  batch_size: 512
  num_workers: 12
  shuffle_train: true
  drop_last: true

train:
  epochs: 50
  loss: mse
  optimizer: {name: adamw, lr: 0.0015, weight_decay: 0.0001}
  scheduler: {name: cosine, T_max: 50}
  early_stopping: {enabled: true, patience: 6, min_delta: 0.0}
  checkpoints: {dir: checkpoints/tcn_speed, save_best_only: true}
  gradient_clip: 1.0
  mixed_precision: true
  log_dir: runs/tcn_speed
  seed: 42
  print_every: 50
  deterministic: false
  cudnn_benchmark: true
  matmul_precision: high

