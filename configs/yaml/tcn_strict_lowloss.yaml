# 严格评估友好的 TCN 训练模板（低损失优先）
# 特点：更宽的通道、更深层数、注意力可保留为 standard 或切换 multiscale（如下提供 multiscale 示例）。

device: cuda
output_dir: outputs/exp_tcn_lowloss
visual_save_dir: image
visual_enabled: true

model:
  fc_hidden: 256
  forecast_horizon: 3
  cnn:
    variant: tcn
  tcn:
    enabled: true
    use_batchnorm: true
    dropout: 0.05
    layers:
      - {out_channels: 64,  kernel_size: 3, dilation: 1,  activation: relu, use_weightnorm: true}
      - {out_channels: 128, kernel_size: 3, dilation: 2,  activation: gelu, use_weightnorm: true}
      - {out_channels: 128, kernel_size: 3, dilation: 4,  activation: gelu, use_weightnorm: true}
      - {out_channels: 128, kernel_size: 3, dilation: 8,  activation: relu, use_weightnorm: true}
  lstm:
    rnn_type: lstm
    hidden_size: 256
    num_layers: 2
    bidirectional: true
    dropout: 0.1
  attention:
    enabled: true
    variant: multiscale
    num_heads: 8
    dropout: 0.1
    add_positional_encoding: false
    multiscale_scales: [1, 2]
    multiscale_fuse: sum

data:
  data_path: data/your_dataset.csv  # TODO: 替换为你的实际数据路径
  sequence_length: 64
  horizon: 3
  feature_indices: null
  target_indices: null
  train_split: 0.7
  val_split: 0.15
  normalize: standard
  batch_size: 256
  num_workers: 12
  shuffle_train: true
  drop_last: true

train:
  epochs: 50
  loss: mse
  optimizer: {name: adamw, lr: 0.001, weight_decay: 0.0001}
  scheduler: {name: cosine, T_max: 50}
  early_stopping: {enabled: true, patience: 8, min_delta: 0.0}
  checkpoints: {dir: checkpoints/tcn_lowloss, save_best_only: true}
  gradient_clip: 1.0
  mixed_precision: true
  log_dir: runs/tcn_lowloss
  seed: 42
  print_every: 50
  deterministic: false
  cudnn_benchmark: true
  matmul_precision: high

